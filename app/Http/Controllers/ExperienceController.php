<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Experience;

class ExperienceController extends Controller
{
    // Listeleme sayfasฤฑ (tรผm deneyimler veya kategoriye gรถre)
    public function index(Request $request)
    {
        $experiences = Experience::paginate(12);
        $categories = $this->getCategories();

        return view('experiences.index', compact('experiences', 'categories'));
    }

    // โYeni deneyim ekleโ formu
    public function create()
    {
        $categories = $this->getCategories();

        return view('experiences.create', compact('categories'));
    }

    // Form gรถnderildiฤinde kaydetme iลlemi
    public function store(Request $request)
    {
        $data = $request->validate([
            'title'       => 'required|string|max:255',
            'description' => 'required|string',
            'price'       => 'required|numeric',
            'city'        => 'required|string|max:255',
            'category'    => 'required|string|max:255',
            'rating'      => 'nullable|numeric|min:0|max:5',
            'image'       => 'nullable|image|mimes:jpg,jpeg,png|max:2048',
        ]);

        if ($request->hasFile('image')) {
            $data['image'] = $request->file('image')->store('experiences', 'public');
        }

        Experience::create($data);

        return redirect()
            ->route('experiences.index')
            ->with('success', 'ุชูุช ุฅุถุงูุฉ ุงูุชุฌุฑุจุฉ ุจูุฌุงุญ');
    }

    // Belirli kategoriye gรถre filtreleme
    public function category($category)
    {
        $experiences = Experience::where('category', $category)->paginate(12);
        $categories = $this->getCategories();

        return view('experiences.index', compact('experiences', 'categories', 'category'));
    }

    // Kategori datalarฤฑnฤฑ merkezi olarak tanฤฑmla
    private function getCategories()
    {
        $all = ['ุงูุทุนุงู ูุงูุดุฑุงุจ','ุงูุทุจูุนุฉ ูุงูููุงุก ุงูุทูู','ุงูุฑูุงุถุฉ','ุงููููู ูุงูุซูุงูุฉ','ุงูููุณููู','ุงูุดูุงุทุฆ'];
        $counts = Experience::select('category')
            ->selectRaw('count(*) as cnt')
            ->groupBy('category')
            ->pluck('cnt','category')
            ->toArray();

        return collect($all)->map(fn($cat) => [
            'name'  => $cat,
            'icon'  => $this->iconFor($cat),
            'count' => $counts[$cat] ?? 0,
        ])->toArray();
    }

    // Kategoriye gรถre ikon eลleลtirme
    private function iconFor($category)
    {
        return match ($category) {
            'ุงูุทุนุงู ูุงูุดุฑุงุจ'      => '๐ฝ๏ธ',
            'ุงูุทุจูุนุฉ ูุงูููุงุก ุงูุทูู'=> '๐ฒ',
            'ุงูุฑูุงุถุฉ'             => '๐๏ธ',
            'ุงููููู ูุงูุซูุงูุฉ'     => '๐จ',
            'ุงูููุณููู'            => '๐ต',
            'ุงูุดูุงุทุฆ'             => '๐',
            default                => '๐',
        };
    }
}
